// [START gradle]
buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		jcenter()    // Bintray's repositories - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.+'    // Latest 1.x.x release
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

repositories {
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repositories (if needed)
	}
	mavenCentral()
	jcenter()
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

dependencies {
	compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

	compile 'jstl:jstl:1.2'

	//  --- My dependecies ---
//	runtime 'mysql:mysql-connector-java:8.0.13'
//	compile 'com.google.cloud.sql:mysql-socket-factory:1.0.11'
//
//	compile 'org.springframework.cloud:spring-cloud-gcp-starter-sql-mysql:1.0.0.RELEASE'
	
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testCompile 'org.springframework.boot:spring-boot-starter-tomcat'

	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
//	compile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
//	compile group: 'cz.jirutka.spring', name: 'embedmongo-spring', version: '1.3.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//  --- End of my dependecies ---

	compile 'com.google.cloud:google-cloud:+'   // Latest Cloud API's http://googlecloudplatform.github.io/google-cloud-java

	testCompile 'junit:junit:4.12'
	testCompile 'com.google.truth:truth:0.33'
	testCompile 'org.mockito:mockito-all:1.10.19'

	testCompile 'com.google.appengine:appengine-testing:+'
	testCompile 'com.google.appengine:appengine-api-stubs:+'
	testCompile 'com.google.appengine:appengine-tools-sdk:+'
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test

// [START model]
appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		version = '1'
		project = 'adventure-game-228714'
	}
}

test {
	useJUnit()
	testLogging.showStandardStreams = true
	beforeTest { descriptor ->
		logger.lifecycle("test: " + descriptor + "  Running")
	}

	onOutput { descriptor, event ->
		logger.lifecycle("test: " + descriptor + ": " + event.message )
	}
	afterTest { descriptor, result ->
		logger.lifecycle("test: " + descriptor + ": " + result )
	}
}

jacoco {
	toolVersion = "0.8.2"
}

// test coverage reports
jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}

// [END model]

group = 'com.tkjavadev'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8

check.dependsOn jacocoTestReport
// [END gradle]